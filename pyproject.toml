[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "homeverse"
version = "0.1.0"
description = "Multi-tenant SaaS for affordable housing demand/supply analytics"
authors = [
    {name = "HomeVerse Team", email = "dev@homeverse.io"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi==0.111.0",
    "uvicorn[standard]==0.29.0",
    "sqlmodel==0.0.16",
    "asyncpg==0.29.0",
    "celery==5.3.6",
    "redis==5.0.3",
    "openai==1.12.0",
    "pydantic-settings==2.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest==8.1.1",
    "pytest-asyncio==0.23.5",
    "pytest-cov==4.1.0",
    "ruff==0.3.3",
    "mypy==1.9.0",
    "black==24.3.0",
]

[tool.ruff]
target-version = "py312"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py312']
line-length = 100
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "geoalchemy2.*",
    "unstructured.*",
    "weasyprint.*",
    "sendgrid.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["app/tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]